{"version":3,"sources":["Home/api.js","Home/ReactionTile.js","Home/ReactionList.js","Home/Post.js","Home/index.js","Home/utils.js","App.js","index.js"],"names":["api_url","getRequest","route","fetch","then","res","json","getReactions","getUsers","getUserContentReactions","addReaction","body","method","headers","JSON","stringify","postRequest","deleteReaction","id","logged_in","ReactionTile","emojiData","reaction_data","setReactions","content_reactions","addReactionMutation","deleteeReactionMutation","content_id","handleEmojiTileClick","a","i","length","user_id","index","item_obj","mutateAsync","reaction_id","splice","resp","push","selected","some","item","className","onClick","style","backgroundColor","border","emoji","ReactionList","timer","data","useState","show","setShow","reactions","useMutation","reactionTypes","Object","keys","handleEmojiClick","reaction_list","map","find","prev","onMouseLeave","setTimeout","e","stopPropagation","onMouseEnter","clearTimeout","name","src","alt","marginRight","Post","reactions_list","content","postedBy","posted_by","avatar","first_name","last_name","type","text","image","Home","useQuery","users","contentReactions","result","current_content_obj","getContentReactions","queryClient","QueryClient","defaultOptions","queries","staleTime","Infinity","App","client","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddef97ce.chunk.js","sourcesContent":["const api_url = \"https://artful-iudex.herokuapp.com\";\n\nconst getRequest = route =>\n  fetch(`${api_url}/${route}`).then(res => res.json());\n\nconst postRequest = (route, body) =>\n  fetch(`${api_url}/${route}`, {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(body)\n  }).then(res => res.json());\n\nconst deleteRequest = route =>\n  fetch(`${api_url}/${route}`, { method: \"delete\" });\n\nexport const getReactions = () => getRequest(\"reactions\");\n\nexport const getUsers = () => getRequest(\"users\");\n\nexport const getUserContentReactions = () =>\n  getRequest(\"user_content_reactions\");\n\nexport const addReaction = body => postRequest(\"user_content_reactions\", body);\n\nexport const deleteReaction = id =>\n  deleteRequest(`user_content_reactions/${id}`);\n\nexport const logged_in = 25;\n","import { logged_in } from \"./api\";\n\nfunction ReactionTile({\n  emojiData,\n  reaction_data,\n  setReactions,\n  content_reactions,\n  addReactionMutation,\n  deleteeReactionMutation,\n  content_id\n}) {\n  const handleEmojiTileClick = async () => {\n    let index, item_obj;\n    for (let i = 0; i < reaction_data.length; i++) {\n      if (reaction_data[i].user_id === logged_in) {\n        index = i;\n        item_obj = reaction_data[i];\n        break;\n      }\n    }\n    if (index >= 0) {\n      await deleteeReactionMutation.mutateAsync(item_obj.reaction_id);\n      reaction_data.splice(index, 1);\n    } else {\n      const resp = await addReactionMutation.mutateAsync({\n        user_id: logged_in,\n        reaction_id: emojiData.id,\n        content_id\n      });\n      reaction_data.push({ user_id: logged_in, reaction_id: resp.id });\n    }\n    setReactions({ ...content_reactions });\n  };\n\n  const selected = reaction_data.some(item => item.user_id === logged_in);\n\n  if (reaction_data.length > 0) {\n    return (\n      <div\n        className=\"reactionTile_contaner\"\n        onClick={async () => handleEmojiTileClick()}\n        style={{\n          backgroundColor: selected ? \"#EDF5FF\" : \"#F4F4F4\",\n          border: selected ? \"1px solid #0F62FE\" : \"1px solid #FFFFFF\"\n        }}\n      >\n        <p className=\"reactionTile_name\">\n          {emojiData.emoji} . {reaction_data.length}\n        </p>\n      </div>\n    );\n  }\n  return null;\n}\n\nexport default ReactionTile;\n","import { useState } from \"react\";\nimport { useMutation } from \"react-query\";\nimport ReactionTile from \"./ReactionTile\";\nimport { logged_in, addReaction, deleteReaction } from \"./api\";\n\nfunction getEmoji(id, reactionData) {\n  return reactionData.find(item => item.id == id);\n}\n\nfunction ReactionList({ data, content_reactions, content_id }) {\n  const [show, setShow] = useState(false);\n  const [reactions, setReactions] = useState(content_reactions);\n  const addReactionMutation = useMutation(addReaction);\n  const deleteeReactionMutation = useMutation(deleteReaction);\n  const reactionTypes = Object.keys(reactions);\n  let timer;\n\n  const handleEmojiClick = async item => {\n    let reaction_list = reactions[item.id];\n    if (!reaction_list) {\n      reactions[item.id] = [];\n      reaction_list = reactions[item.id];\n    }\n    let index, item_obj;\n    for (let i = 0; i < reaction_list.length; i++) {\n      if (reaction_list[i].user_id === logged_in) {\n        index = i;\n        item_obj = reaction_list[i];\n        break;\n      }\n    }\n    if (index >= 0) {\n      await deleteeReactionMutation.mutateAsync(item_obj.reaction_id);\n      reaction_list.splice(index, 1);\n    } else {\n      const resp = await addReactionMutation.mutateAsync({\n        user_id: logged_in,\n        reaction_id: item.id,\n        content_id\n      });\n      reaction_list.push({\n        user_id: logged_in,\n        reaction_id: resp.id\n      });\n    }\n    setReactions({ ...reactions });\n  };\n\n  return (\n    <div className=\"reactions\">\n      {reactionTypes.map(item => {\n        const emojiData = getEmoji(item, data);\n        return (\n          <ReactionTile\n            key={item.reaction_id}\n            emojiData={emojiData}\n            reaction_data={reactions[item]}\n            content_reactions={content_reactions}\n            setReactions={setReactions}\n            deleteeReactionMutation={deleteeReactionMutation}\n            addReactionMutation={addReactionMutation}\n            content_id={content_id}\n          />\n        );\n      })}\n      <div\n        className=\"rections_listIcon\"\n        onClick={() => setShow(prev => !prev)}\n        onMouseLeave={() => {\n          timer = setTimeout(() => {\n            setShow(false);\n          }, 800);\n        }}\n      >\n        {show && (\n          <div\n            className=\"reaction_listContainer\"\n            onClick={e => e.stopPropagation()}\n            onMouseEnter={() => clearTimeout(timer)}\n          >\n            {data.map(item => (\n              <div key={item.id}>\n                <p\n                  key={item.id}\n                  className=\"reaction_emojiIcon\"\n                  onClick={() => handleEmojiClick(item)}\n                >\n                  {item.emoji}\n                </p>\n                <div className=\"reaction_tooltip\">\n                  <p className=\"reaction_reactionName\">{item.name}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n        <img\n          src=\"/media/addReactionIcon.svg\"\n          alt=\"addReaction\"\n          style={{ marginRight: 1 }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ReactionList;\n","import ReactionList from \"./ReactionList\";\n\nfunction Post({ reactions_list, content, content_reactions }) {\n  const postedBy = content.posted_by;\n  return (\n    <div className=\"post\">\n      <img\n        className=\"post_avatar\"\n        src={postedBy.avatar}\n        alt={postedBy.first_name}\n      />\n      <div>\n        <p className=\"post_postedBy\">\n          {postedBy.first_name} {postedBy.last_name}\n        </p>\n        {content.type === \"TEXT\" ? (\n          <p className=\"post_text\">{content.text}</p>\n        ) : (\n          <img className=\"post_media\" src={content?.image} alt=\"scenary\" />\n        )}\n        <ReactionList\n          data={reactions_list}\n          content_reactions={content_reactions}\n          content_id={content.id}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","import { useQuery } from \"react-query\";\nimport Post from \"./Post\";\nimport {\n  getReactions,\n  getUserContentReactions,\n  getUsers,\n  logged_in\n} from \"./api\";\nimport \"./index.css\";\nimport { getContentReactions } from \"./utils\";\n\nfunction Home() {\n  const { data: reactions_list } = useQuery(\"getReactions\", getReactions);\n  const { data: users } = useQuery(\"getUsers\", getUsers);\n  const { data: reactions } = useQuery(\n    \"getUserContentReactions\",\n    getUserContentReactions\n  );\n\n  if (reactions_list && users && reactions) {\n    const content = [\n      {\n        id: 1,\n        type: \"TEXT\",\n        text: \"Hello this is good post comment\",\n        posted_by: users[0]\n      },\n      {\n        id: 2,\n        type: \"MEDIA\",\n        image: \"/media/contentImage.jpeg\",\n        posted_by: users[1]\n      }\n    ];\n    const contentReactions = getContentReactions(reactions);\n    return (\n      <div className=\"container\">\n        <p className=\"container_headerText\">\n          You are logged in as user id: {logged_in}\n        </p>\n        {content.map(item => {\n          return (\n            <Post\n              key={item.id}\n              reactions_list={reactions_list}\n              content={item}\n              content_reactions={contentReactions[item.id]}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n  return <h3>Loading...</h3>;\n}\n\nexport default Home;\n","export function getContentReactions(reactions) {\n  const result = {};\n  for (let i of reactions) {\n    if (!result[i.content_id]) {\n      result[i.content_id] = {};\n    }\n    const current_content_obj = result[i.content_id];\n    if (!current_content_obj[i.reaction_id]) {\n      current_content_obj[i.reaction_id] = [\n        {\n          reaction_id: i.id,\n          user_id: i.user_id\n        }\n      ];\n    } else {\n      current_content_obj[i.reaction_id] = [\n        ...current_content_obj[i.reaction_id],\n        {\n          reaction_id: i.id,\n          user_id: i.user_id\n        }\n      ];\n    }\n  }\n  return result;\n}\n","import { QueryClient, QueryClientProvider } from \"react-query\";\nimport Home from \"./Home/\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: Infinity\n    }\n  }\n});\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Home />\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}